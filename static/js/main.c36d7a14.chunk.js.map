{"version":3,"sources":["Feedback/Statistics/Statistics.module.css","Feedback/FeedbackOptions/FeedbackOptions.module.css","Feedback/Section/Section.module.css","Feedback/FeedbackOptions/FeedbackOptions.js","Feedback/Section/Section.js","Feedback/Statistics/Statistics.js","Feedback/Notification/Notification.js","Feedback/Feedback.js","index.js"],"names":["module","exports","FeedbackOptions","options","onFeedbackButtonClick","className","s","button","type","name","onClick","Section","props","title","children","Statistics","good","neutral","bad","total","percent","list","item","Notification","message","Feedback","useState","setGood","setNeutral","setBad","positiveFeedbackPercentage","Math","floor","p","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,mBCAzDD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,MAAQ,yB,qICmBXC,EAjBS,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,sBAClC,OACE,wBACEC,UAAWC,IAAEC,OACbC,KAAK,SACLC,KAAMN,EACNO,QAASN,EAJX,SAMGD,K,gBCKQQ,EAbC,SAACC,GACf,OACE,oCACE,oBAAIP,UAAWC,IAAEO,MAAjB,SAAyBD,EAAMC,QAC9BD,EAAME,a,gBCkBEC,EAtBI,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC/C,OACE,qBAAIf,UAAWC,IAAEe,KAAjB,UACE,qBAAIhB,UAAWC,IAAEgB,KAAjB,mBAA8BN,KAC9B,qBAAIX,UAAWC,IAAEgB,KAAjB,sBAAiCL,KACjC,qBAAIZ,UAAWC,IAAEgB,KAAjB,kBAA6BJ,KAC7B,qBAAIb,UAAWC,IAAEgB,KAAjB,oBAA+BH,KAC/B,qBAAId,UAAWC,IAAEgB,KAAjB,gCACsBF,EAAU,EAAV,UAAiBA,EAAjB,KAA8B,SCD3CG,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCiDEC,MA9CR,WACL,MAAwBC,mBAAS,GAAjC,mBAAOV,EAAP,KAAaW,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOT,EAAP,KAAgBW,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOR,EAAP,KAAYW,EAAZ,KAEMV,EAAQH,EAAOC,EAAUC,EACzBY,EAA6BC,KAAKC,MAAOhB,EAAOG,EAAS,KAE/D,OACE,gCACE,eAAC,EAAD,CAASN,MAAM,wBAAf,UACE,cAAC,EAAD,CACEV,QAAQ,OACRC,sBAAuB,WACrBuB,GAAQ,SAACM,GAAD,OAAOA,EAAI,QAGvB,cAAC,EAAD,CACE9B,QAAQ,UACRC,sBAAuB,WACrBwB,GAAW,SAACK,GAAD,OAAOA,EAAI,QAG1B,cAAC,EAAD,CACE9B,QAAQ,MACRC,sBAAuB,WACrByB,GAAO,SAACI,GAAD,OAAOA,EAAI,WAIxB,eAAC,EAAD,CAASpB,MAAM,aAAf,UACGM,EACC,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,QAASU,IAET,KACHX,EAAQ,KAAO,cAAC,EAAD,CAAcK,QAAQ,6BCzC9CU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c36d7a14.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__2pEVZ\",\"item\":\"Statistics_item__YVbnu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__34fzO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__eAUCe\"};","import PropTypes from \"prop-types\";\nimport s from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ options, onFeedbackButtonClick }) => {\n  return (\n    <button\n      className={s.button}\n      type=\"button\"\n      name={options}\n      onClick={onFeedbackButtonClick}\n    >\n      {options}\n    </button>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.string.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nconst Section = (props) => {\n  return (\n    <section>\n      <h2 className={s.title}>{props.title}</h2>\n      {props.children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import PropTypes from \"prop-types\";\nimport s from \"./Statistics.module.css\";\n\nconst Statistics = ({ good, neutral, bad, total, percent }) => {\n  return (\n    <ul className={s.list}>\n      <li className={s.item}>Good: {good}</li>\n      <li className={s.item}>Neutral: {neutral}</li>\n      <li className={s.item}>Bad: {bad}</li>\n      <li className={s.item}>Total: {total}</li>\n      <li className={s.item}>\n        Positive feedback: {percent > 0 ? `${percent}%` : 0}\n      </li>\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  percent: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { useState } from \"react\";\nimport FeedbackOptions from \"./FeedbackOptions\";\nimport Section from \"./Section\";\nimport Statistics from \"./Statistics\";\nimport Notification from \"./Notification\";\n\nexport function Feedback() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const total = good + neutral + bad;\n  const positiveFeedbackPercentage = Math.floor((good / total) * 100);\n\n  return (\n    <div>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options=\"good\"\n          onFeedbackButtonClick={() => {\n            setGood((p) => p + 1);\n          }}\n        />\n        <FeedbackOptions\n          options=\"neutral\"\n          onFeedbackButtonClick={() => {\n            setNeutral((p) => p + 1);\n          }}\n        />\n        <FeedbackOptions\n          options=\"bad\"\n          onFeedbackButtonClick={() => {\n            setBad((p) => p + 1);\n          }}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {total ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            percent={positiveFeedbackPercentage}\n          />\n        ) : null}\n        {total ? null : <Notification message=\"No feedback given\" />}\n      </Section>\n    </div>\n  );\n}\n\nexport default Feedback;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Feedback from \"./Feedback\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Feedback />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}