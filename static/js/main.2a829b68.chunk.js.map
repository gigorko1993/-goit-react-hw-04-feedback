{"version":3,"sources":["Feedback/Statistics/Statistics.module.css","Feedback/FeedbackOptions/FeedbackOptions.js","Feedback/Section/Section.js","Feedback/Statistics/Statistics.js","Feedback/Notification/Notification.js","Feedback/Feedback.js","index.js","Feedback/FeedbackOptions/FeedbackOptions.module.css","Feedback/Section/Section.module.css"],"names":["module","exports","FeedbackOptions","options","onFeedbackButtonClick","className","s","button","type","name","onClick","Section","props","title","children","Statistics","good","neutral","bad","total","percent","list","item","Notification","message","Feedback","state","addFeedback","e","target","setState","prevState","handler","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,4JCmB1CC,EAjBS,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,sBAClC,OACE,wBACEC,UAAWC,IAAEC,OACbC,KAAK,SACLC,KAAMN,EACNO,QAASN,EAJX,SAMGD,K,gBCKQQ,EAbC,SAACC,GACf,OACE,oCACE,oBAAIP,UAAWC,IAAEO,MAAjB,SAAyBD,EAAMC,QAC9BD,EAAME,a,gBCkBEC,EAtBI,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC/C,OACE,qBAAIf,UAAWC,IAAEe,KAAjB,UACE,qBAAIhB,UAAWC,IAAEgB,KAAjB,mBAA8BN,KAC9B,qBAAIX,UAAWC,IAAEgB,KAAjB,sBAAiCL,KACjC,qBAAIZ,UAAWC,IAAEgB,KAAjB,kBAA6BJ,KAC7B,qBAAIb,UAAWC,IAAEgB,KAAjB,oBAA+BH,KAC/B,qBAAId,UAAWC,IAAEgB,KAAjB,gCACsBF,EAAU,EAAV,UAAiBA,EAAjB,KAA8B,SCD3CG,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KC2DEC,EAxDf,4MACEC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,GAJT,EAMES,YAAc,SAACC,GACb,IAAInB,EAAOmB,EAAEC,OAAOpB,KACpB,EAAKqB,UAAS,SAACC,GACb,IAAIC,EAAUD,EAAUtB,GACxB,OAAQsB,EAAUtB,GAAQuB,EAAU,MAV1C,EAaEC,mBAAqB,WACnB,MAA+B,EAAKP,MACpC,OADA,EAAQV,KAAR,EAAcC,QAAd,EAAuBC,KAd3B,EAiBEgB,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKV,MAAMV,KAAO,EAAKiB,qBAAwB,MAlBtE,4CAoBE,WACE,MAA+BI,KAAKX,MAA5BV,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACnBC,EAAQkB,KAAKJ,qBACjB,OACE,gCACE,eAAC,EAAD,CAASpB,MAAM,wBAAf,UACE,cAAC,EAAD,CACEV,QAAQ,OACRC,sBAAuBiC,KAAKV,cAE9B,cAAC,EAAD,CACExB,QAAQ,UACRC,sBAAuBiC,KAAKV,cAE9B,cAAC,EAAD,CACExB,QAAQ,MACRC,sBAAuBiC,KAAKV,iBAGhC,eAAC,EAAD,CAASd,MAAM,aAAf,UACGM,EACC,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,QAASiB,KAAKH,oCAEd,KACHf,EAAQ,KAAO,cAAC,EAAD,CAAcK,QAAQ,gCAjDhD,GAA8Bc,IAAMC,WCDpCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1B5C,EAAOC,QAAU,CAAC,OAAS,kC,kBCA3BD,EAAOC,QAAU,CAAC,MAAQ,0B","file":"static/js/main.2a829b68.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__1e6Vx\",\"item\":\"Statistics_item__1zvPc\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ options, onFeedbackButtonClick }) => {\r\n  return (\r\n    <button\r\n      className={s.button}\r\n      type=\"button\"\r\n      name={options}\r\n      onClick={onFeedbackButtonClick}\r\n    >\r\n      {options}\r\n    </button>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Section.module.css\";\r\n\r\nconst Section = (props) => {\r\n  return (\r\n    <section>\r\n      <h2 className={s.title}>{props.title}</h2>\r\n      {props.children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, percent }) => {\r\n  return (\r\n    <ul className={s.list}>\r\n      <li className={s.item}>Good: {good}</li>\r\n      <li className={s.item}>Neutral: {neutral}</li>\r\n      <li className={s.item}>Bad: {bad}</li>\r\n      <li className={s.item}>Total: {total}</li>\r\n      <li className={s.item}>\r\n        Positive feedback: {percent > 0 ? `${percent}%` : 0}\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  percent: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport FeedbackOptions from \"./FeedbackOptions\";\r\nimport Section from \"./Section\";\r\nimport Statistics from \"./Statistics\";\r\nimport Notification from \"./Notification\";\r\n\r\nexport class Feedback extends React.Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n  addFeedback = (e) => {\r\n    let name = e.target.name;\r\n    this.setState((prevState) => {\r\n      let handler = prevState[name];\r\n      return (prevState[name] = handler + 1);\r\n    });\r\n  };\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  };\r\n  countPositiveFeedbackPercentage = () => {\r\n    return Math.floor((this.state.good / this.countTotalFeedback()) * 100);\r\n  };\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    let total = this.countTotalFeedback();\r\n    return (\r\n      <div>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options=\"good\"\r\n            onFeedbackButtonClick={this.addFeedback}\r\n          />\r\n          <FeedbackOptions\r\n            options=\"neutral\"\r\n            onFeedbackButtonClick={this.addFeedback}\r\n          />\r\n          <FeedbackOptions\r\n            options=\"bad\"\r\n            onFeedbackButtonClick={this.addFeedback}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {total ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={total}\r\n              percent={this.countPositiveFeedbackPercentage()}\r\n            />\r\n          ) : null}\r\n          {total ? null : <Notification message=\"No feedback given\" />}\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Feedback from \"./Feedback\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Feedback />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2WAgU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__zEqv7\"};"],"sourceRoot":""}